{"version":3,"sources":["components/ToDo.jsx","components/Input.jsx","components/App.jsx","index.js"],"names":["ToDo","id","content","deleteToDo","onClick","Input","addToDo","useState","inputText","setInputText","pushToDo","className","onKeyDown","event","key","keyCode","onChange","target","value","type","App","toDoList","updateToDoList","prevList","filter","x","index","newToDo","oldValue","map","toDo","ReactDOM","render","document","getElementById"],"mappings":"qMAceA,MAZf,UAAc,GAAEC,EAAF,QAAMC,EAAN,WAAeC,IAC3B,OACE,wBACEC,QAAS,KACPD,EAAWF,KAGZC,IC2BQG,MAlCf,UAAe,QAAEC,IAAY,MAAD,EACQC,mBAAS,IADjB,mBACnBC,EADmB,KACRC,EADQ,KAO1B,SAASC,IACW,KAAdF,IACFF,EAAQE,GACRC,EAAa,KAYjB,OACE,6BACE,yBAAKE,UAAU,OAAOC,UAV1B,SAAmBC,GACC,UAAdA,EAAMC,IACRJ,IAC2B,KAAlBG,EAAME,SACfN,EAAa,MAOX,2BAAOO,SAtBb,SAAyBH,GACvBJ,EAAaI,EAAMI,OAAOC,QAqBYC,KAAK,OAAOD,MAAOV,IACrD,4BAAQJ,QAASM,GACf,yCCKKU,MA9Bf,WAAgB,MAAD,EACsBb,mBAAS,IAD/B,mBACNc,EADM,KACIC,EADJ,KAOb,SAASnB,EAAWF,GAClBqB,EAAgBC,GACPA,EAASC,OAAO,CAACC,EAAGC,IAClBA,IAAUzB,IAKvB,OACE,yBAAKU,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,kBAAC,EAAD,CAAOL,QAjBX,SAAiBqB,GACfL,EAAgBM,GAAa,IAAIA,EAAUD,OAiBzC,4BACGN,EAASQ,IAAI,CAACC,EAAMJ,IACnB,kBAAC,EAAD,CAAMxB,QAAS4B,EAAMhB,IAAKY,EAAOzB,GAAIyB,EAAOvB,WAAYA,QCvBlE4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.967c37a5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction ToDo({ id, content, deleteToDo }) {\r\n  return (\r\n    <li\r\n      onClick={() => {\r\n        deleteToDo(id);\r\n      }}\r\n    >\r\n      {content}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ToDo;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Input({ addToDo }) {\r\n  const [inputText, setInputText] = useState(\"\");\r\n\r\n  function updateInputText(event) {\r\n    setInputText(event.target.value);\r\n  }\r\n\r\n  function pushToDo() {\r\n    if (inputText !== \"\") {\r\n      addToDo(inputText);\r\n      setInputText(\"\");\r\n    }\r\n  }\r\n\r\n  function handleKey(event) {\r\n    if (event.key === \"Enter\") {\r\n      pushToDo();\r\n    } else if (event.keyCode === 27) {\r\n      setInputText(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"form\" onKeyDown={handleKey}>\r\n        <input onChange={updateInputText} type=\"text\" value={inputText} />\r\n        <button onClick={pushToDo}>\r\n          <span>Add</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\nimport Item from \"./ToDo\";\nimport Input from \"./Input\";\n\nfunction App() {\n  const [toDoList, updateToDoList] = useState([]);\n\n  function addToDo(newToDo) {\n    updateToDoList((oldValue) => [...oldValue, newToDo]);\n  }\n\n  function deleteToDo(id) {\n    updateToDoList((prevList) => {\n      return prevList.filter((x, index) => {\n        return index !== id;\n      });\n    });\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <Input addToDo={addToDo} />\n      <ul>\n        {toDoList.map((toDo, index) => (\n          <Item content={toDo} key={index} id={index} deleteToDo={deleteToDo} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n//CHALLENGE: Make this app work by applying what you've learnt.\n//1. When new text is written into the input, its state should be saved.\n//2. When the add button is pressed, the current data in the input should be\n//added to an array.\n//3. The <ul> should display all the array items as <li>s\n"],"sourceRoot":""}